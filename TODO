TODO:

URGENT:
- Implement data_logger_sd onto device    DONE
- update sensor_test.cpp to collect data at SAMPLE_RATE_ACCEL_HZ 1000 DONE
- Assembl of the datalogger version of the sensor to take to Spain
- PCB ready for production (find out where to send them, Spain?)

THIS WEEK:
- collect physical data on the device (ask Juan chainsaw again)
- implement and test the clasifier with google lab (by Thursday)
- repeaters ready to install by Friday (request $800 for installation expenses)

BEFORE THE 10TH:
- writing staff training documents
- repeater assembly done
- PCB finish done
- sensor casing + batt done
- sensor example module test distance done

WHILE IN SPAIN:
- Data logging with chainsaw bot horizontal and vertical
- extraction of data + elaboration of classifier done
- receive PCB's and send to factory the other 40 done
- Meshtastic code Moritz done

ON ARRIVAL TO ECUADOR (until 15th May)
- Router code + hardware test full system

NICE TO HAVE: 
- Update README file


## Vibration Classification Strategy

This table outlines how vibration data is classified into **machete, chainsaw, or no activity** using **FFT (acceleration data) and Zero-Crossing Rate (ZCR) on gyroscope data**.

| **Activity**  | **FFT Peak (Acceleration)** | **ZCR (Gyroscope Motion)** |
|--------------|---------------------------|---------------------------|
| **Chainsaw** | High (100-300 Hz) | Medium (consistent oscillations) |
| **Machete**  | Moderate (50-150 Hz) | Very High (sudden swings) |
| **No Activity** | Low (no strong peak) | Very Low (almost no motion) |

### How It Works:
1. **FFT Analysis (Accelerometer Data)**
   - Determines dominant vibration frequencies.
   - Helps differentiate between high-frequency (chainsaw) and lower-frequency (machete) activity.

2. **Zero-Crossing Rate (Gyroscope Data)**
   - Counts how often the signal crosses zero.
   - Helps detect chaotic swings (machete) vs. smoother, repetitive vibrations (chainsaw).

3. **Final Classification:**
   - **Chainsaw:** High FFT peak + Medium ZCR.
   - **Machete:** Moderate FFT peak + Very High ZCR.
   - **No Activity:** Low FFT peak + Very Low ZCR.

- Step 2: Compute FFT on accelerometer Z-axis
   float fft_peak_acc = getFFTpeak(accZ);

- Step 3: Compute Zero-Crossing Rate on gyroscope Z-axis
   int zcr_gyro = computeZCR(gyroZ);

- Step 4: Classify the vibration event (Chainsaw / Machete / None)
   meshtastic_TreeShake detected_activity = classifyActivity(fft_peak_acc, zcr_gyro);

- Step 5: Send the result over Meshtastic
   sendMeshtasticMessage(detected_activity);
